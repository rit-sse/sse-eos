version: '3.1'

services:
  # Web is the "EDGE" node atm, eventually will go behind a HA proxy that
  # sits on the node with the domain we want for web. It will load balance
  # on the internal vip, that way other nodes don't have publiclly exposed
  # ports that they don't need.
  web:
    image: ritsse/onerepo
    environment:
      - 'SITE_ROOT=http://0.0.0.0:80'
      - 'API_UPSTREAM=api:3000'
    networks:
      - external
      - internal
    deploy:
     replicas: 4
     labels:
       - "traefik.backend=sse"
       - "traefik.frontend.rule=Host:sseprod.se.rit.edu,ssedev.se.rit.edu"
       - "traefik.port=80"
       - "traefik.enable=true"
       - "traefik.docker.network=external"
     update_config:
       parallelism: 6
       delay: 5s

  # API, running on devlop for now
  api:
    image: ritsse/node-api:devlop
    environment:
      - GOOGLE_CLIENT_ID_FILE=/run/secrets/GOOGLE_CLIENT_ID
      - GOOGLE_CLIENT_SECRET_FILE=/run/secrets/GOOGLE_SECRET
      - NODE_ENV=production
      - SLACK_SECRET_FILE=/run/secrets/SLACK_SECRET
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    secrets:
      - GOOGLE_CLIENT_ID
      - GOOGLE_SECRET
      - SLACK_SECRET
      - postgres_password
    networks:
      - internal

  # Postgres is deployed "Globally" but with a contraint on db==true
  # this this label only exists on a single node in the cluster, so there
  # can only ever be 1 instance of postgres. Which is what we want at this
  # scale
  postgres:
    image: 'postgres:9.6.2'
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    volumes:
      - pgdata:/var/lib/postgresql/data
    deploy:
      mode: global
      placement:
        constraints:
          - node.labels.db == true
    secrets:
      - source: postgres_password
        target: postgres_password
        uid: '999'
        gid: '999'
        mode: 0440
    networks:
      - internal

networks:
  external:
    external: true
  internal:

# All secrets are external until secrets matures a bit more and services can
# provide them
secrets:
  postgres_password:
    external: true
  GOOGLE_CLIENT_ID:
    external: true
  GOOGLE_SECRET:
    external: true
  SLACK_SECRET:
    external: true

volumes:
  # Caddy cache makes it so we don't refetch certs on redeploy
  pgdata:
    external: true
